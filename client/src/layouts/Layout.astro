---
import type { TBanner, THeader, TFooter } from "../types";
import "../styles/global.css";

import Banner from "../components/Banner.astro";

type TStrapiResponse<T = null> = {
  success: boolean;
  data?: T;
  error?: {
    status: number;
    name: string;
    message: string;
    details?: Record<string, string[]>;
  };
  meta?: {
    pagination: {
      page: number;
      pageSize: number;
      pageCount: number;
      total: number;
    };
  };
};

type TGlobalData = {
  id: number;
  documentId: string;
  title: string;
  description: string;
  createdAt: string;
  publishedAt: string;
  banner: TBanner;
  header: THeader;
  footer: TFooter;
};

async function getStrapiGlobalData(): Promise<TStrapiResponse<TGlobalData>> {
  const BASE_API_URL =
    import.meta.env.VITE_STRAPI_BASE_URL ?? "http://localhost:1337";
  const path = "/api/global";
  const url = new URL(path, BASE_API_URL);
  const response = await fetch(url.href);
  const data = await response.json();
  console.dir(data, { depth: null });
  return data;
}

const globalData = await getStrapiGlobalData();

if (globalData.error) {
  console.error("Failed to fetch global data:", globalData.error.message);
  throw new Error(globalData.error.message);
}

const { banner, header, footer } = globalData.data ?? {};

---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro Basics</title>
  </head>
  <body>
    {banner && <Banner data={banner} />}
    <div class="box">{JSON.stringify(header)}</div>
    <!-- <slot /> -->
    <div class="box">{JSON.stringify(footer)}</div>
  </body>
</html>
